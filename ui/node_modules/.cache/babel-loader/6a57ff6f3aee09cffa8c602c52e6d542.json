{"ast":null,"code":"import { XlsxRead, XlsxJson } from \"../../node_modules/vue3-xlsx/dist/vue3-xlsx.cjs.prod.js\";\nimport readXlsxFile from 'read-excel-file';\nimport axios from 'axios';\nexport default {\n  components: {\n    XlsxRead,\n    XlsxJson\n  },\n\n  data() {\n    return {\n      file: null,\n      collection: null,\n      guests: []\n    };\n  },\n\n  mounted() {\n    axios.get('http://127.0.0.1:8000/guests/').then(response => {\n      this.guests = response.data;\n      this.len = this.guests.length;\n    });\n  },\n\n  methods: {\n    onChange(event) {\n      this.file = event.target.files ? event.target.files[0] : null;\n      readXlsxFile(this.file).then(rows => {\n        console.log(\"rows:\", rows);\n\n        if (rows[0][0] == \"jmbag\") {\n          for (let index = 1; index < rows.length; index++) {\n            const element = rows[index][0];\n            axios.get('http://127.0.0.1:8000/guests/').then(response => {\n              this.guests = response.data;\n              this.len = this.guests.length;\n              var ids = [];\n              this.guests.forEach(element => {\n                ids.push(element.id);\n              });\n\n              for (let index = 0; index < ids.length; index++) {\n                if (ids.includes(String(index)) == false) {\n                  this.nextId = index;\n                  break;\n                }\n              }\n\n              if (this.nextId == '') {\n                this.nextId = ids.length;\n              }\n\n              axios.post('http://127.0.0.1:8000/guests/', {\n                id: this.nextId,\n                jmbag: element,\n                tag: \"Brucoši\",\n                bought: '0',\n                entered: '0'\n              }, {\n                auth: {\n                  username: 'paxx',\n                  password: 'KSETpenisica43'\n                }\n              });\n            });\n          }\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA4BA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,yDAAnC;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe;EACbC,UAAU,EAAE;IACVJ,QADU;IAEVC;EAFU,CADC;;EAKbI,IAAI,GAAG;IACL,OAAO;MACLC,IAAI,EAAE,IADD;MAELC,UAAU,EAAE,IAFP;MAGLC,MAAM,EAAE;IAHH,CAAP;EAKD,CAXY;;EAYbC,OAAO,GAAG;IACRN,KAAK,CAACO,GAAN,CAAU,+BAAV,EACGC,IADH,CACQC,QAAO,IAAK;MAChB,KAAKJ,MAAL,GAAcI,QAAQ,CAACP,IAAvB;MACA,KAAKQ,GAAL,GAAW,KAAKL,MAAL,CAAYM,MAAvB;IACD,CAJH;EAKD,CAlBY;;EAmBbC,OAAO,EAAE;IACPC,QAAQ,CAACC,KAAD,EAAQ;MACd,KAAKX,IAAL,GAAYW,KAAK,CAACC,MAAN,CAAaC,KAAb,GAAqBF,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAArB,GAA6C,IAAzD;MACAjB,YAAY,CAAC,KAAKI,IAAN,CAAZ,CAAwBK,IAAxB,CAA8BS,IAAD,IAAU;QACrCC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,IAArB;;QACA,IAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,KAAc,OAAlB,EAA2B;UACzB,KAAK,IAAIG,KAAI,GAAI,CAAjB,EAAoBA,KAAI,GAAIH,IAAI,CAACN,MAAjC,EAAyCS,KAAK,EAA9C,EAAkD;YAChD,MAAMC,OAAM,GAAIJ,IAAI,CAACG,KAAD,CAAJ,CAAY,CAAZ,CAAhB;YAEApB,KAAK,CAACO,GAAN,CAAU,+BAAV,EACGC,IADH,CACQC,QAAO,IAAK;cAChB,KAAKJ,MAAL,GAAcI,QAAQ,CAACP,IAAvB;cACA,KAAKQ,GAAL,GAAW,KAAKL,MAAL,CAAYM,MAAvB;cACA,IAAIW,GAAE,GAAI,EAAV;cAEA,KAAKjB,MAAL,CAAYkB,OAAZ,CAAoBF,OAAM,IAAK;gBAC7BC,GAAG,CAACE,IAAJ,CAASH,OAAO,CAACI,EAAjB;cACD,CAFD;;cAGA,KAAK,IAAIL,KAAI,GAAI,CAAjB,EAAoBA,KAAI,GAAIE,GAAG,CAACX,MAAhC,EAAwCS,KAAK,EAA7C,EAAiD;gBAC/C,IAAIE,GAAG,CAACI,QAAJ,CAAaC,MAAM,CAACP,KAAD,CAAnB,KAA+B,KAAnC,EAA0C;kBACxC,KAAKQ,MAAL,GAAcR,KAAd;kBACA;gBACF;cACF;;cACA,IAAI,KAAKQ,MAAL,IAAe,EAAnB,EAAuB;gBACrB,KAAKA,MAAL,GAAcN,GAAG,CAACX,MAAlB;cACF;;cAEAX,KAAK,CAAC6B,IAAN,CAAW,+BAAX,EACE;gBAAEJ,EAAE,EAAE,KAAKG,MAAX;gBAAmBE,KAAK,EAAET,OAA1B;gBAAmCU,GAAG,EAAE,SAAxC;gBAAmDC,MAAM,EAAE,GAA3D;gBAAgEC,OAAO,EAAE;cAAzE,CADF,EAEE;gBAAEC,IAAI,EAAE;kBAAEC,QAAQ,EAAE,MAAZ;kBAAoBC,QAAQ,EAAE;gBAA9B;cAAR,CAFF;YAID,CAvBH;UA0BF;QACF;MAED,CAnCD;IAsCD;;EAzCM;AAnBI,CAAf","names":["XlsxRead","XlsxJson","readXlsxFile","axios","components","data","file","collection","guests","mounted","get","then","response","len","length","methods","onChange","event","target","files","rows","console","log","index","element","ids","forEach","push","id","includes","String","nextId","post","jmbag","tag","bought","entered","auth","username","password"],"sourceRoot":"","sources":["C:\\brucifer-karte\\brucifer-karte\\bfk2\\brucifer-karte\\ui\\src\\views\\ImportView.vue"],"sourcesContent":["<template>\r\n  <div class=\"import\">\r\n    <br>\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-8\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">Import</div>\r\n          <div class=\"card-body\">\r\n            <section>\r\n              <input type=\"file\" @change=\"onChange\" />\r\n              <xlsx-read :file=\"file\">\r\n                <xlsx-json :sheet=\"selectedSheet\">\r\n                  <template #default=\"{ collection }\">\r\n                    <div>\r\n                      {{ collection }}\r\n                    </div>\r\n                  </template>\r\n                </xlsx-json>\r\n              </xlsx-read>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n\r\nimport { XlsxRead, XlsxJson } from \"../../node_modules/vue3-xlsx/dist/vue3-xlsx.cjs.prod.js\";\r\nimport readXlsxFile from 'read-excel-file';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  components: {\r\n    XlsxRead,\r\n    XlsxJson\r\n  },\r\n  data() {\r\n    return {\r\n      file: null,\r\n      collection: null,\r\n      guests: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    axios.get('http://127.0.0.1:8000/guests/',)\r\n      .then(response => {\r\n        this.guests = response.data;\r\n        this.len = this.guests.length;\r\n      })\r\n  },\r\n  methods: {\r\n    onChange(event) {\r\n      this.file = event.target.files ? event.target.files[0] : null;\r\n      readXlsxFile(this.file).then((rows) => {\r\n        console.log(\"rows:\", rows)\r\n        if (rows[0][0] == \"jmbag\") {\r\n          for (let index = 1; index < rows.length; index++) {\r\n            const element = rows[index][0];\r\n\r\n            axios.get('http://127.0.0.1:8000/guests/',)\r\n              .then(response => {\r\n                this.guests = response.data;\r\n                this.len = this.guests.length;\r\n                var ids = [];\r\n\r\n                this.guests.forEach(element => {\r\n                  ids.push(element.id);\r\n                });\r\n                for (let index = 0; index < ids.length; index++) {\r\n                  if (ids.includes(String(index)) == false) {\r\n                    this.nextId = index;\r\n                    break;\r\n                  }\r\n                }\r\n                if (this.nextId == '') {\r\n                  this.nextId = ids.length;\r\n                }\r\n\r\n                axios.post('http://127.0.0.1:8000/guests/',\r\n                  { id: this.nextId, jmbag: element, tag: \"Brucoši\", bought: '0', entered: '0' },\r\n                  { auth: { username: 'paxx', password: 'KSETpenisica43' } }\r\n                )\r\n              })\r\n\r\n\r\n          }\r\n        }\r\n\r\n      })\r\n\r\n\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>"]},"metadata":{},"sourceType":"module"}