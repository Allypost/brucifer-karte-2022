{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"import\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  class: \"row justify-content-center\"\n};\nconst _hoisted_4 = {\n  class: \"col-md-8\"\n};\nconst _hoisted_5 = {\n  class: \"card\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-header\"\n}, \"Import\", -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = {\n  class: \"card-body\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_xlsx_json = _resolveComponent(\"xlsx-json\");\n\n  const _component_xlsx_read = _resolveComponent(\"xlsx-read\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"section\", null, [_createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = function () {\n      return $options.onChange && $options.onChange(...arguments);\n    })\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  ), _createVNode(_component_xlsx_read, {\n    file: $data.file\n  }, {\n    default: _withCtx(() => [_createVNode(_component_xlsx_json, {\n      sheet: _ctx.selectedSheet\n    }, {\n      default: _withCtx(_ref => {\n        let {\n          collection\n        } = _ref;\n        return [_createElementVNode(\"div\", null, _toDisplayString(collection), 1\n        /* TEXT */\n        )];\n      }),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"sheet\"])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"file\"])])])])])])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;gCACTC,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;EACKD,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;gCACTC,oBAAqC,KAArC,EAAqC;EAAhCD,KAAK,EAAC;AAA0B,CAArC,EAAyB,QAAzB,EAA+B;AAAA;AAA/B;;;EACKA,KAAK,EAAC;;;;;;;uBANnBE,oBAuBM,KAvBN,cAuBM,CAtBJC,UAsBI,EArBJF,oBAoBM,KApBN,cAoBM,CAnBJA,oBAkBM,KAlBN,cAkBM,CAjBJA,oBAgBM,KAhBN,cAgBM,CAfJG,UAeI,EAdJH,oBAaM,KAbN,cAaM,CAZJA,oBAWU,SAXV,EAWU,IAXV,EAWU,CAVRA,oBAAwC,OAAxC,EAAwC;IAAjCI,IAAI,EAAC,MAA4B;IAApBC,QAAM;MAAA,OAAEC,oDAAF;IAAA;EAAc,CAAxC;;EAAA,CAUQ,EATRC,aAQYC,oBARZ,EAQY;IARAC,IAAI,EAAEC;EAQN,CARZ,EAAsB;sBACpB,MAMY,CANZH,aAMYI,oBANZ,EAMY;MANAC,KAAK,EAAEC;IAMP,CANZ,EAAgC;MACnBC,OAAO,WAChB;QAAA,IAEM;UAHcC;QAGd,CAFN;QAAA,OAD8B,CAC9Bf,oBAEM,KAFN,EAEM,IAFN,EAEMgB,iBADDD,UACC,CAFN,EACe;QAAA;QADf,CAD8B,CAC9B;MAAA,CADgB,CADY;;;;IAAA,CAAhC;;IAAA,YAMY,EAPQ;;;;EAAA,CAAtB;;EAAA,WASQ,CAXV,CAYI,CAbN,CAcI,CAhBN,CAiBI,CAlBN,CAmBI,CApBN,CAqBI,CAvBN","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","_hoisted_6","type","onChange","$options","_createVNode","_component_xlsx_read","file","$data","_component_xlsx_json","sheet","_ctx","default","collection","_toDisplayString"],"sourceRoot":"","sources":["C:\\brucifer-karte\\brucifer-karte\\bfk2\\brucifer-karte\\ui\\src\\views\\ImportView.vue"],"sourcesContent":["<template>\r\n  <div class=\"import\">\r\n    <br>\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-8\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">Import</div>\r\n          <div class=\"card-body\">\r\n            <section>\r\n              <input type=\"file\" @change=\"onChange\" />\r\n              <xlsx-read :file=\"file\">\r\n                <xlsx-json :sheet=\"selectedSheet\">\r\n                  <template #default=\"{ collection }\">\r\n                    <div>\r\n                      {{ collection }}\r\n                    </div>\r\n                  </template>\r\n                </xlsx-json>\r\n              </xlsx-read>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n\r\nimport { XlsxRead, XlsxJson } from \"../../node_modules/vue3-xlsx/dist/vue3-xlsx.cjs.prod.js\";\r\nimport readXlsxFile from 'read-excel-file';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  components: {\r\n    XlsxRead,\r\n    XlsxJson\r\n  },\r\n  data() {\r\n    return {\r\n      file: null,\r\n      collection: null,\r\n      guests: [],\r\n      ids: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    axios.get('http://127.0.0.1:8000/guests/',)\r\n      .then(response => {\r\n        this.guests = response.data;\r\n        this.len = this.guests.length;\r\n        \r\n        this.guests.forEach(element => {\r\n          this.ids.push(element.id);\r\n        });\r\n      })\r\n  },\r\n  methods: {\r\n    onChange(event) {\r\n      this.file = event.target.files ? event.target.files[0] : null;\r\n      readXlsxFile(this.file).then((rows) => {\r\n        console.log(\"rows:\", rows)\r\n        if (rows[0][0] == \"jmbag\") {\r\n          for (let index = 1; index < rows.length; index++) {\r\n            const element = rows[index][0];\r\n\r\n\r\n            for (let index = 0; index < ids.length; index++) {\r\n              if (ids.includes(String(index)) == false) {\r\n                this.nextId = index;\r\n                break;\r\n              }\r\n            }\r\n            if (this.nextId == '') {\r\n              this.nextId = ids.length;\r\n            }\r\n\r\n            this.ids.push(this.nextId);\r\n            console.log(this.nextId);\r\n            console.log(element);\r\n            axios.post('http://127.0.0.1:8000/guests/',\r\n              { id: this.nextId, jmbag: element, tag: \"BrucoÅ¡i\", bought: '0', entered: '0' },\r\n              { auth: { username: 'paxx', password: 'KSETpenisica43' } }\r\n            )\r\n\r\n\r\n\r\n          }\r\n        }\r\n\r\n      })\r\n\r\n\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>"]},"metadata":{},"sourceType":"module"}