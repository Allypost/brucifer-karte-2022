{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"grid\"\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = {\n  class: \"text\"\n};\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.sponsors, sponsor => {\n    return _openBlock(), _createElementBlock(\"article\", {\n      key: sponsor.id\n    }, [_createElementVNode(\"img\", {\n      src: sponsor.image\n    }, null, 8\n    /* PROPS */\n    , _hoisted_2), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h3\", null, _toDisplayString(sponsor.id) + \" ; \" + _toDisplayString(sponsor.name), 1\n    /* TEXT */\n    ), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteTag(sponsor),\n      class: \"btn btn-primary\",\n      id: \"gumbard\"\n    }, [_createVNode(_component_font_awesome_icon, {\n      icon: \"fa-solid fa-trash-can\"\n    })], 8\n    /* PROPS */\n    , _hoisted_4)])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;;EAGJA,KAAK,EAAC;;;;;;uBAHbC,oBASM,KATN,cASM,oBARJA,oBAMUC,SANV,EAMU,IANV,EAMUC,YANiBC,cAMjB,EANMC,OAAmB,IAAZ;yBAAvBJ,oBAMU,SANV,EAMU;MAN4BK,GAAG,EAAED,OAAO,CAACE;IAMzC,CANV,GACAC,oBAAgC,KAAhC,EAAgC;MAApBC,GAAG,EAAEJ,OAAO,CAACK;IAAO,CAAhC;;IAAA,eACAF,oBAGM,KAHN,cAGM,CAFJA,oBAA0C,IAA1C,EAA0C,IAA1C,EAA0CG,iBAApCN,OAAO,CAACE,EAA4B,IAAxB,KAAwB,GAArBI,iBAAEN,OAAO,CAACO,IAAV,CAArB,EAAmC;IAAA;IAAnC,CAEI,EADJJ,oBAAsI,QAAtI,EAAsI;MAA7HK,OAAK,YAAEC,mBAAUT,OAAV,CAAsH;MAAlGL,KAAK,EAAC,iBAA4F;MAA1EO,EAAE,EAAC;IAAuE,CAAtI,GAA2EQ,aAAkDC,4BAAlD,EAAkD;MAA/BC,IAAI,EAAC;IAA0B,CAAlD,EAA3E;;IAAA,aACI,CAHN,EAFA;GAMU,CANV;;EAAA,CAQI,EATN","names":["class","_createElementBlock","_Fragment","_renderList","$data","sponsor","key","id","_createElementVNode","src","image","_toDisplayString","name","onClick","$options","_createVNode","_component_font_awesome_icon","icon"],"sourceRoot":"","sources":["C:\\brucifer-karte\\brucifer-karte\\bfk2\\brucifer-karte\\ui\\src\\components\\Lineup\\LineupTable.vue"],"sourcesContent":["<template>\r\n  <div class=\"grid\">\r\n    <article v-for=\"sponsor in sponsors\" :key=\"sponsor.id\">\r\n    <img v-bind:src=\"sponsor.image\">\r\n    <div class=\"text\">\r\n      <h3>{{sponsor.id}} ; {{sponsor.name}}</h3>\r\n      <button @click=\"deleteTag(sponsor)\" class=\"btn btn-primary\" id=\"gumbard\">  <font-awesome-icon icon=\"fa-solid fa-trash-can\" /></button>\r\n    </div>\r\n    </article>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n  name: 'LineupTable',\r\n  props: {\r\n    msg: String\r\n  },\r\n  data(){\r\n    return{\r\n      sponsors: [],\r\n    }\r\n    \r\n  },\r\n  mounted(){\r\n    this.created();\r\n  },\r\n  methods:{\r\n    created() {\r\n    axios.get('http://127.0.0.1:8000/lineup',)\r\n    .then(response => {\r\n      this.sponsors =response.data;  \r\n      });\r\n  },\r\n    deleteTag(tag){\r\n      axios.delete('http://127.0.0.1:8000/lineup/'+tag.id+'/',\r\n      {auth:{username:'paxx',password:'KSETpenisica43'}}\r\n      )\r\n      .then(()=>{\r\n        this.created();\r\n      })\r\n    },\r\n    getAp(elementName){\r\n    \r\n    \r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n.grid { \r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  grid-gap: 20px;\r\n  align-items: stretch;\r\n  }\r\n.grid > article {\r\n  border: 1px solid #ccc;\r\n  box-shadow: 2px 2px 6px 0px  rgba(0,0,0,0.3);\r\n}\r\n.grid > article img {\r\n  max-width: 100%;\r\n}\r\n.text {\r\n  padding: 0 20px 20px;\r\n}\r\n.text > button {\r\n  background: gray;\r\n  border: 0;\r\n  color: white;\r\n  padding: 10px;\r\n  width: 100%;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module"}