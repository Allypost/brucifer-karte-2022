{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { getBaseStyles, getCellStyles, getNumberFormats } from '../xml/xlsx.js'; // http://officeopenxml.com/SSstyles.php\n// Returns an array of cell styles.\n// A cell style index is its ID.\n\nexport default function parseStyles(content, xml) {\n  if (!content) {\n    return {};\n  } // https://social.msdn.microsoft.com/Forums/sqlserver/en-US/708978af-b598-45c4-a598-d3518a5a09f0/howwhen-is-cellstylexfs-vs-cellxfs-applied-to-a-cell?forum=os_binaryfile\n  // https://www.office-forums.com/threads/cellxfs-cellstylexfs.2163519/\n\n\n  var doc = xml.createDocument(content);\n  var baseStyles = getBaseStyles(doc).map(parseCellStyle);\n  var numberFormats = getNumberFormats(doc).map(parseNumberFormatStyle).reduce(function (formats, format) {\n    // Format ID is a numeric index.\n    // There're some standard \"built-in\" formats (in Excel) up to about `100`.\n    formats[format.id] = format;\n    return formats;\n  }, []);\n\n  var getCellStyle = function getCellStyle(xf) {\n    if (xf.hasAttribute('xfId')) {\n      return _objectSpread(_objectSpread({}, baseStyles[xf.xfId]), parseCellStyle(xf, numberFormats));\n    }\n\n    return parseCellStyle(xf, numberFormats);\n  };\n\n  return getCellStyles(doc).map(getCellStyle);\n}\n\nfunction parseNumberFormatStyle(numFmt) {\n  return {\n    id: numFmt.getAttribute('numFmtId'),\n    template: numFmt.getAttribute('formatCode')\n  };\n} // http://www.datypic.com/sc/ooxml/e-ssml_xf-2.html\n\n\nfunction parseCellStyle(xf, numFmts) {\n  var style = {};\n\n  if (xf.hasAttribute('numFmtId')) {\n    var numberFormatId = xf.getAttribute('numFmtId'); // Built-in number formats don't have a `<numFmt/>` element in `styles.xml`.\n    // https://hexdocs.pm/xlsxir/number_styles.html\n\n    if (numFmts[numberFormatId]) {\n      style.numberFormat = numFmts[numberFormatId];\n    } else {\n      style.numberFormat = {\n        id: numberFormatId\n      };\n    }\n  }\n\n  return style;\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SACEA,aADF,EAEEC,aAFF,EAGEC,gBAHF,QAIO,gBAJP,C,CAMA;AACA;AACA;;AACA,eAAe,SAASC,WAAT,CAAqBC,OAArB,EAA8BC,GAA9B,EAAmC;EAChD,IAAI,CAACD,OAAL,EAAc;IACZ,OAAO,EAAP;EAF8C,EAKhD;EACA;;;EACA,IAAME,GAAG,GAAGD,GAAG,CAACE,cAAJF,CAAmBD,OAAnBC,CAAZ;EAEA,IAAMG,UAAU,GAAGR,aAAa,CAACM,GAAD,CAAbN,CAChBS,GADgBT,CACZU,cADYV,CAAnB;EAGA,IAAMW,aAAa,GAAGT,gBAAgB,CAACI,GAAD,CAAhBJ,CACnBO,GADmBP,CACfU,sBADeV,EAEnBW,MAFmBX,CAEZ,UAACY,OAAD,EAAUC,MAAV,EAAqB;IAC3B;IACA;IACAD,OAAO,CAACC,MAAM,CAACC,EAAR,CAAPF,GAAqBC,MAArBD;IACA,OAAOA,OAAP;EANkB,GAOjB,EAPiBZ,CAAtB;;EASA,IAAMe,YAAY,GAAG,SAAfA,YAAe,CAACC,EAAD,EAAQ;IAC3B,IAAIA,EAAE,CAACC,YAAHD,CAAgB,MAAhBA,CAAJ,EAA6B;MAC3B,uCACKV,UAAU,CAACU,EAAE,CAACE,IAAJ,CADf,GAEKV,cAAc,CAACQ,EAAD,EAAKP,aAAL,CAFnB;IAID;;IACD,OAAOD,cAAc,CAACQ,EAAD,EAAKP,aAAL,CAArB;EAPF;;EAUA,OAAOV,aAAa,CAACK,GAAD,CAAbL,CAAmBQ,GAAnBR,CAAuBgB,YAAvBhB,CAAP;AACD;;AAED,SAASW,sBAAT,CAAgCS,MAAhC,EAAwC;EACtC,OAAO;IACLL,EAAE,EAAEK,MAAM,CAACC,YAAPD,CAAoB,UAApBA,CADC;IAELE,QAAQ,EAAEF,MAAM,CAACC,YAAPD,CAAoB,YAApBA;EAFL,CAAP;EAMF;;;AACA,SAASX,cAAT,CAAwBQ,EAAxB,EAA4BM,OAA5B,EAAqC;EACnC,IAAMC,KAAK,GAAG,EAAd;;EACA,IAAIP,EAAE,CAACC,YAAHD,CAAgB,UAAhBA,CAAJ,EAAiC;IAC/B,IAAMQ,cAAc,GAAGR,EAAE,CAACI,YAAHJ,CAAgB,UAAhBA,CAAvB,CAD+B,CAE/B;IACA;;IACA,IAAIM,OAAO,CAACE,cAAD,CAAX,EAA6B;MAC3BD,KAAK,CAACE,YAANF,GAAqBD,OAAO,CAACE,cAAD,CAA5BD;IADF,OAEO;MACLA,KAAK,CAACE,YAANF,GAAqB;QAAET,EAAE,EAAEU;MAAN,CAArBD;IACD;EACF;;EACD,OAAOA,KAAP;AACD","names":["getBaseStyles","getCellStyles","getNumberFormats","parseStyles","content","xml","doc","createDocument","baseStyles","map","parseCellStyle","numberFormats","parseNumberFormatStyle","reduce","formats","format","id","getCellStyle","xf","hasAttribute","xfId","numFmt","getAttribute","template","numFmts","style","numberFormatId","numberFormat"],"sources":["../../source/read/parseStyles.js"],"sourcesContent":["import {\r\n  getBaseStyles,\r\n  getCellStyles,\r\n  getNumberFormats\r\n} from '../xml/xlsx.js'\r\n\r\n// http://officeopenxml.com/SSstyles.php\r\n// Returns an array of cell styles.\r\n// A cell style index is its ID.\r\nexport default function parseStyles(content, xml) {\r\n  if (!content) {\r\n    return {}\r\n  }\r\n\r\n  // https://social.msdn.microsoft.com/Forums/sqlserver/en-US/708978af-b598-45c4-a598-d3518a5a09f0/howwhen-is-cellstylexfs-vs-cellxfs-applied-to-a-cell?forum=os_binaryfile\r\n  // https://www.office-forums.com/threads/cellxfs-cellstylexfs.2163519/\r\n  const doc = xml.createDocument(content)\r\n\r\n  const baseStyles = getBaseStyles(doc)\r\n    .map(parseCellStyle)\r\n\r\n  const numberFormats = getNumberFormats(doc)\r\n    .map(parseNumberFormatStyle)\r\n    .reduce((formats, format) => {\r\n      // Format ID is a numeric index.\r\n      // There're some standard \"built-in\" formats (in Excel) up to about `100`.\r\n      formats[format.id] = format\r\n      return formats\r\n    }, [])\r\n\r\n  const getCellStyle = (xf) => {\r\n    if (xf.hasAttribute('xfId')) {\r\n      return {\r\n        ...baseStyles[xf.xfId],\r\n        ...parseCellStyle(xf, numberFormats)\r\n      }\r\n    }\r\n    return parseCellStyle(xf, numberFormats)\r\n  }\r\n\r\n  return getCellStyles(doc).map(getCellStyle)\r\n}\r\n\r\nfunction parseNumberFormatStyle(numFmt) {\r\n  return {\r\n    id: numFmt.getAttribute('numFmtId'),\r\n    template: numFmt.getAttribute('formatCode')\r\n  }\r\n}\r\n\r\n// http://www.datypic.com/sc/ooxml/e-ssml_xf-2.html\r\nfunction parseCellStyle(xf, numFmts) {\r\n  const style = {}\r\n  if (xf.hasAttribute('numFmtId')) {\r\n    const numberFormatId = xf.getAttribute('numFmtId')\r\n    // Built-in number formats don't have a `<numFmt/>` element in `styles.xml`.\r\n    // https://hexdocs.pm/xlsxir/number_styles.html\r\n    if (numFmts[numberFormatId]) {\r\n      style.numberFormat = numFmts[numberFormatId]\r\n    } else {\r\n      style.numberFormat = { id: numberFormatId }\r\n    }\r\n  }\r\n  return style\r\n}"]},"metadata":{},"sourceType":"module"}