{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"tags-add\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"Dodaj: \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_h = _resolveComponent(\"h\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_h, null, {\n    default: _withCtx(() => [_hoisted_2]),\n    _: 1\n    /* STABLE */\n\n  }), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"inputtagname\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.name = $event),\n    placeholder: \"Tag Name\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.name]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $options.postTag && $options.postTag(...arguments);\n    }),\n    class: \"btn btn-primary\",\n    id: \"gumb2\"\n  }, \"Add\")]);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC;;;iDACD;;;;;uBADPC,oBAKM,KALN,cAKM,CAJFC,aAAcC,YAAd,EAAc,IAAd,EAAc;sBAAX,MAAO,aAAI;;;;EAAA,CAAd,CAIE,kBAHFC,oBAA2E,OAA3E,EAA2E;IAApEC,IAAI,EAAC,MAA+D;IAAxDL,EAAE,EAAC,cAAqD;+DAA7BM,aAAIC,OAAyB;IAAvBC,WAAW,EAAC;EAAW,CAA3E;;EAAA,kBAA8CF,aAG5C,EAFFF,oBACwC,QADxC,EACwC;IAD/BK,OAAK;MAAA,OAAEC,kDAAF;IAAA,EAC0B;IADfC,KAAK,EAAC,iBACS;IAAxBX,EAAE,EAAC;EAAqB,CADxC,EAC4B,KAD5B,CAEE,CALN","names":["id","_createElementBlock","_createVNode","_component_h","_createElementVNode","type","$data","$event","placeholder","onClick","$options","class"],"sourceRoot":"","sources":["C:\\brucifer-karte\\brucifer-karte\\bfk2\\brucifer-karte\\ui\\src\\components\\Tags\\TagsAdd.vue"],"sourcesContent":["<template>\r\n  <div id=\"tags-add\">\r\n      <h>Dodaj: </h>\r\n      <input type=\"text\" id=\"inputtagname\" v-model=\"name\" placeholder=\"Tag Name\">\r\n      <button @click=\"postTag\" class=\"btn btn-primary\"\r\n                      id=\"gumb2\" >Add</button>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n  name: 'TagsAdd',\r\n  props: {\r\n    msg: String\r\n  },\r\n  data(){\r\n    return{\r\n      tags: [],\r\n      id:'',\r\n      name:'',\r\n      surname:'',\r\n      jmbag:'',\r\n      phone:'',\r\n      tag:'',\r\n      bought:'',\r\n      entered:'',\r\n      deleted:'',\r\n      nextId:'',\r\n    }\r\n  },\r\n  created() {\r\n    axios.get('http://127.0.0.1:8000/tags/',)\r\n    .then(response => {\r\n      this.tags =response.data;\r\n    })\r\n  },\r\n  methods:{\r\n    postTag(){\r\n      var ids =[];\r\n      \r\n      this.tags.forEach(element => {\r\n        ids.push(element.id);\r\n      });\r\n      for (let index = 0; index < ids.length; index++) {\r\n        if(ids.includes(String(index))==false){\r\n          this.nextId=index;\r\n          break;\r\n        }\r\n      }\r\n      if(this.nextId==''){\r\n        this.nextId=ids.length;\r\n      }\r\n\r\n      axios.post('http://127.0.0.1:8000/tags/',\r\n      {id:this.nextId,name:this.name},\r\n      {auth:{username:'paxx',password:'KSETpenisica43'}}\r\n      )\r\n      .then(()=>{\r\n        this.created();\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n#inputname{\r\n    width: 220px;\r\n    margin: 2px;\r\n}\r\n#inputsurname{\r\n    width: 220px;\r\n    margin: 2px;\r\n}\r\n\r\n\r\n#gumb2{\r\n  margin: 2px;\r\n  width: 220px;\r\n  height: 30px;\r\n  text-align: center;\r\n}\r\n</style>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}