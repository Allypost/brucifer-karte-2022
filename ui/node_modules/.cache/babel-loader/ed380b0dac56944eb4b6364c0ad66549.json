{"ast":null,"code":"import { renderSlot as _renderSlot, withModifiers as _withModifiers, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _ctx.start ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass(['over_body_mask', _ctx.finish && _ctx.dim ? 'over_body_mask_after' : '']),\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.close && _ctx.close(...args)),\n    style: _normalizeStyle(_ctx.setStyle())\n  }, [_createElementVNode(\"div\", {\n    onClick: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"stop\"])),\n    style: _normalizeStyle(_ctx.setStyle(_ctx.dialogStyle)),\n    class: _normalizeClass(['over_body_dialog', _ctx.before, _ctx.finish ? _ctx.after : ''])\n  }, [_renderSlot(_ctx.$slots, \"default\")], 6\n  /* CLASS, STYLE */\n  )], 6\n  /* CLASS, STYLE */\n  )) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;SAwFUA,4BADRC,oBAaM,KAbN,EAaM;UAAA;IAXHC,KAAK,qCAAqBF,eAAUA,QAAV,GAAa,sBAAb,GAAa,EAAlC,EAWF;IAVHG,OAAK,yCAAEH,iCAAF,CAUF;IATHI,KAAK,kBAAEJ,eAAF;EASF,CAbN,GAMEK,oBAMM,KANN,EAMM;IALHF,OAAK,2CAAN,OAAW,CAAL,EAAK,QAAL,EAKF;IAJHC,KAAK,kBAAEJ,cAASA,gBAAT,CAAF,CAIF;IAHHE,KAAK,uCAAuBF,WAAvB,EAA+BA,cAASA,UAAT,GAAc,EAA7C;EAGF,CANN,GAKEM,YAAaN,WAAb,EAAa,SAAb,EALF;;EAAA,EANF;;EAAA","names":["_ctx","_createElementBlock","class","onClick","style","_createElementVNode","_renderSlot"],"sourceRoot":"","sources":["C:\\brucifer-karte\\brucifer-karte\\bfk2\\brucifer\\ui\\node_modules\\vue-over-body\\src\\index.vue"],"sourcesContent":["<script type=\"text/babel\">\n  module.exports = {\n    name: 'vue-over-body',\n    props: {\n      open: {\n        type: Number,\n        default: 0\n      },\n      transition: {\n        type: Number,\n        default: 0.3\n      },\n      dialogStyle: {\n        type: Object,\n        default: () => ({})\n      },\n      before: {\n        type: String,\n        default: ''\n      },\n      after: {\n        type: String,\n        default: ''\n      },\n      dim: {\n        type: Boolean,\n        default: true\n      }\n    },\n    data: function () {\n      return {\n        start: false,\n        finish: false,\n        cls: ' over_body_open'\n      }\n    },\n    mounted: function () {\n      if (this.open) {\n        this.toogle(this.open)\n      } else {\n        this.clear()\n      }\n    },\n    watch: {\n      open: function () {\n        this.toogle(this.open)\n      }\n    },\n    methods: {\n      close: function () {\n        this.toogle(false)\n      },\n      toogle: function (open) {\n        var t = 50\n        if (open) {\n          document.body.className += this.$data.cls\n          this.$data.start = true\n          setTimeout(() => this.$data.finish = true, t)\n        } else {\n          this.$data.finish = false\n          setTimeout(() => {\n            this.$data.start = false\n            this.clear()\n          }, this.transition * 1000 + t)\n        }\n      },\n      clear: function () {\n        document.body.className = document.body.className.split(this.$data.cls).join('')\n      },\n      setStyle: function (obj) {\n        if (obj == null) {\n          obj = {}\n        }\n\n        obj['z-index'] = this.open\n        obj['-webkit-transition'] = 'all ' + this.transition + 's'\n        obj['-moz-transition'] = 'all ' + this.transition + 's'\n        obj['-o-transition'] = 'all ' + this.transition + 's'\n        obj['transition'] = 'all ' + this.transition + 's'\n\n        return obj\n      }\n    }\n  }\n</script>\n\n<template>\n  <div\n    v-if=\"start\"\n    :class=\"['over_body_mask', finish && dim ? 'over_body_mask_after' : '']\"\n    @click=\"close\"\n    :style=\"setStyle()\"\n  >\n    <div\n      @click.stop\n      :style=\"setStyle(dialogStyle)\"\n      :class=\"['over_body_dialog', before, finish ? after : '']\"\n    >\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<style>\n  .over_body_open {\n    overflow: hidden;\n  }\n\n  .over_body_mask {\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    position:fixed; \n    overflow-x: hidden;\n    overflow-y: auto;\n  }\n\n  .over_body_mask_after {\n    background-color:rgba(0, 0, 0, 0.5); \n  }\n\n  .over_body_dialog {\n    position:relative; \n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}