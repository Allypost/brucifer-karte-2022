{"ast":null,"code":"import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5c6101e4\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"login\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"row justify-content-center\\\" data-v-5c6101e4><div class=\\\"col-md-8\\\" data-v-5c6101e4><div class=\\\"card-header\\\" data-v-5c6101e4>Login</div><div class=\\\"card-body\\\" data-v-5c6101e4><br data-v-5c6101e4><div id=\\\"signin_button\\\" data-v-5c6101e4></div></div></div></div>\", 1);\n\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3);\n}","map":{"version":3,"mappings":";;;;;EACSA,EAAE,EAAC;;;;;oBACJC;;uBADJC,oBAOwB,KAPxB,cAOwBC,UAPxB","names":["id","_hoisted_2","_createElementBlock","_hoisted_3"],"sourceRoot":"","sources":["C:\\brucifer-karte\\brucifer-karte\\bfk2\\brucifer\\ui\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n    <div id=\"login\">\r\n        <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-8\">\r\n          <div class=\"card-header\">Login</div>\r\n          <div class=\"card-body\">\r\n        <br>\r\n        <div id=\"signin_button\"></div>\r\n    </div></div></div></div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport VueJwtDecode from 'vue-jwt-decode'\r\nimport store from '@/store/index.js';\r\nexport default {\r\n    components: {\r\n    },\r\n    el: '#app',\r\n    computed: {\r\n    privilege() {\r\n      return store.state.privilege;\r\n    },\r\n    name(){\r\n      return store.state.name;\r\n    },\r\n    id(){\r\n      return store.state.id;\r\n    },\r\n    email(){\r\n      return store.state.email;\r\n    }\r\n    },\r\n    data() {\r\n        return {\r\n            resp: '',\r\n        }\r\n\r\n    },\r\n    methods: {\r\n        setidd(idd){\r\n            store.commit('setId', idd)\r\n        },\r\n        handleCredentialResponse(res) {\r\n            const responsePayload = VueJwtDecode.decode(res.credential);\r\n\r\n            console.log(\"ID: \" + responsePayload.sub);\r\n            console.log('Full Name: ' + responsePayload.name);\r\n            console.log('Given Name: ' + responsePayload.given_name);\r\n            console.log('Family Name: ' + responsePayload.family_name);\r\n            console.log(\"Image URL: \" + responsePayload.picture);\r\n            console.log(\"Email: \" + responsePayload.email);\r\n\r\n            const fixUtf8 = require('fix-utf8')\r\n            var someEncodedString = fixUtf8(responsePayload.name)\r\n            console.log(someEncodedString)\r\n            store.commit('setId', responsePayload.email)\r\n            store.commit('setName', responsePayload.name)\r\n            store.commit('setEmail', responsePayload.email)\r\n\r\n            \r\n\r\n            axios.get('http://127.0.0.1:8000/users/',)\r\n                .then(response => {\r\n                    this.users = response.data;\r\n\r\n                    var ids = [];\r\n                    var nextId = -1;\r\n                    var registeredEmail = false;\r\n\r\n\r\n                    this.users.forEach(element => {\r\n                        ids.push(element.id);\r\n\r\n                        if (element.email == responsePayload.email) {\r\n                            registeredEmail = true\r\n                            store.commit('setPrivilege', element.privilege)\r\n                        }\r\n                    });\r\n                    for (let index = 0; index < ids.length; index++) {\r\n                        if (ids.includes(String(index)) == false) {\r\n                            nextId = index;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (nextId == -1) {\r\n                        nextId = ids.length;\r\n                    }\r\n\r\n                    if (!registeredEmail) {\r\n                        axios.post('http://127.0.0.1:8000/users/',\r\n                            { id: nextId, name: responsePayload.name, email: responsePayload.email, privilege: '0' },\r\n                            { auth: { username: 'paxx', password: 'KSETpenisica43' } }\r\n                        )\r\n                        store.commit('setPrivilege', '0')\r\n                    }\r\n                    console.log(\"-----\",store.state.privilege)\r\n                })\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n    },\r\n    mounted: function () {\r\n         if(!window.location.hash) {\r\n        window.location = window.location + '#loaded';\r\n        window.location.reload();\r\n    }\r\n        let googleScript = document.createElement('script');\r\n        googleScript.src = 'https://accounts.google.com/gsi/client';\r\n        document.head.appendChild(googleScript);\r\n\r\n        window.addEventListener('load', () => {\r\n            console.log(window.google);\r\n            window.google.accounts.id.initialize({\r\n                client_id: \"729300808359-9qt44p6ksjivnbfd981pgjbmkh4ifgcj.apps.googleusercontent.com\",\r\n                callback: this.handleCredentialResponse,\r\n\r\n            });\r\n            window.google.accounts.id.renderButton(\r\n                document.getElementById(\"signin_button\"),\r\n                { theme: \"outline\", size: \"large\" }  // customization attributes\r\n            );\r\n        })\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#signin_button {\r\n    text-align: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}