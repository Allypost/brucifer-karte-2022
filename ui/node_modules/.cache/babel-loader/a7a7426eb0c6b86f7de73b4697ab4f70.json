{"ast":null,"code":"import item from './item.vue';\nimport overBody from 'vue-over-body';\nmodule.exports = {\n  name: 'vue-tree-nav',\n  components: {\n    'item': item,\n    'vue-over-body': overBody\n  },\n  props: {\n    side: {\n      type: Array,\n      default: () => []\n    },\n    left: {\n      type: Array,\n      default: () => []\n    },\n    right: {\n      type: Array,\n      default: () => []\n    },\n    location: {\n      type: String,\n      default: ''\n    },\n    showPath: {\n      type: Boolean,\n      default: true\n    },\n    barScale: {\n      type: Number,\n      default: 1\n    },\n    sideScale: {\n      type: Number,\n      default: 1\n    },\n    bgColor: {\n      type: String,\n      default: '#f3f3f3'\n    },\n    fontColor: {\n      type: String,\n      default: '#666666'\n    },\n    hoverColor: {\n      type: String,\n      default: '#dddddd'\n    },\n    activeColor: {\n      type: String,\n      default: '#000000'\n    }\n  },\n  data: function () {\n    return {\n      sideBar: 0,\n      rightDrop: 0,\n      leftDrop: 0,\n      path: '',\n      tree: [],\n      links: {},\n      Path: []\n    };\n  },\n  mounted: function () {\n    this.setRoutes();\n  },\n  watch: {\n    location: function () {\n      this.setLocation();\n    },\n    side: function () {\n      this.setRoutes();\n    },\n    left: function () {\n      this.setRoutes();\n    },\n    right: function () {\n      this.setRoutes();\n    }\n  },\n  methods: {\n    open: function () {\n      this.$data.sideBar += 1;\n    },\n    close: function () {\n      this.$data.sideBar = 0;\n    },\n    setLocation: function () {\n      this.$data.path = '';\n      Object.keys(this.$data.links).sort().forEach(key => {\n        if (`#${this.location}`.indexOf(key) !== -1) {\n          this.$data.path = this.$data.links[key];\n        }\n      });\n      this.$data.Path = this.$data.path.split(' / ');\n      this.close();\n    },\n    setRoutes: function () {\n      this.$data.tree = [{\n        style: 'text-align:right;',\n        icon: 'times',\n        href: this.close\n      }];\n      this.$data.links = {};\n      this.transverse(this.side, this.$data.tree, '', '#');\n      this.transverse(this.left, [], '', '#');\n      this.transverse(this.right, [], '', '#');\n      this.setLocation();\n    },\n    transverse: function (Input, Output, label, path) {\n      Input.forEach(input => {\n        var abs = input.path && input.path.substr(0, 1) === '/';\n        var newLabel = input.label || input.name || (abs ? input.path.substr(1) : input.path);\n\n        if ((newLabel || input.icon) && (input.path || '').indexOf(':') === -1 && !input.redirect) {\n          Output.push({});\n          var i = Output.length - 1;\n          Output[i].icon = input.icon;\n          Output[i].label = newLabel;\n          newLabel = (label ? `${label} / ` : '') + newLabel;\n          var newPath = abs ? `#${input.path}` : `${path || ''}/${input.path}`;\n\n          if (input.children) {\n            Output[i].children = [];\n            this.transverse(input.children, Output[i].children, newLabel, newPath);\n          } else {\n            Output[i].href = input.href || newPath;\n            this.$data.links[input.href || newPath] = newLabel;\n          }\n        }\n      });\n    },\n    getRight: function () {\n      var R = [];\n      this.right.forEach(r => {\n        R.push(r);\n      });\n      R.reverse();\n      return R;\n    },\n    getItem: function (item) {\n      return Object.assign({\n        scale: this.barScale,\n        bgColor: this.bgColor,\n        fontColor: this.fontColor,\n        hoverColor: this.hoverColor,\n        activeColor: this.activeColor,\n        path: this.$data.Path\n      }, item, {\n        path: this.$data.Path\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["item","overBody","module","exports","name","components","props","side","type","Array","default","left","right","location","String","showPath","Boolean","barScale","Number","sideScale","bgColor","fontColor","hoverColor","activeColor","data","sideBar","rightDrop","leftDrop","path","tree","links","Path","mounted","setRoutes","watch","setLocation","methods","open","$data","close","Object","keys","sort","forEach","key","indexOf","split","style","icon","href","transverse","Input","Output","label","input","abs","substr","newLabel","redirect","push","i","length","newPath","children","getRight","R","r","reverse","getItem","assign","scale"],"sourceRoot":"","sources":["C:\\brucifer-karte\\brucifer-karte\\bfk2\\brucifer\\ui\\node_modules\\vue-tree-nav\\src\\components\\bar.vue"],"sourcesContent":["<script type=\"text/babel\">\n  import item from './item.vue'\n  import overBody from 'vue-over-body'\n\n  module.exports = {\n    name: 'vue-tree-nav',\n    components: {\n      'item': item,\n      'vue-over-body': overBody\n    },\n    props: {\n      side: {\n        type: Array,\n        default: () => []\n      },\n      left: {\n        type: Array,\n        default: () => []\n      },\n      right: {\n        type: Array,\n        default: () => []\n      },\n      location: {\n        type: String,\n        default: ''\n      },\n      showPath: {\n        type: Boolean,\n        default: true \n      },\n      barScale: {\n        type: Number,\n        default: 1\n      },\n      sideScale: {\n        type: Number,\n        default: 1\n      },\n      bgColor: {\n        type: String,\n        default: '#f3f3f3'\n      },\n      fontColor: {\n        type: String,\n        default: '#666666'\n      },\n      hoverColor: {\n        type: String,\n        default: '#dddddd'\n      },\n      activeColor: {\n        type: String,\n        default: '#000000'\n      }\n    },\n    data: function () {\n      return {\n        sideBar: 0,\n        rightDrop: 0,\n        leftDrop: 0,\n        path: '',\n        tree: [],\n        links: {},\n        Path: []\n      }\n    },\n    mounted: function () {\n      this.setRoutes()\n    },\n    watch: {\n      location: function () {\n        this.setLocation()\n      },\n      side: function () {\n        this.setRoutes()\n      },\n      left: function () {\n        this.setRoutes()\n      },\n      right: function () {\n        this.setRoutes()\n      }\n    },\n    methods: {\n      open: function () {\n        this.$data.sideBar += 1;\n      },\n      close: function () {\n        this.$data.sideBar = 0;\n      },\n      setLocation: function () {\n        this.$data.path = ''\n        Object.keys(this.$data.links).sort().forEach(key => {\n          if (`#${this.location}`.indexOf(key) !== -1) {\n            this.$data.path = this.$data.links[key]\n          }\n        })\n        this.$data.Path = this.$data.path.split(' / ')\n        this.close()\n      },\n      setRoutes: function () {\n        this.$data.tree = [{\n          style: 'text-align:right;',\n          icon: 'times',\n          href: this.close\n        }]\n        this.$data.links = {}\n        this.transverse(this.side, this.$data.tree, '', '#')\n        this.transverse(this.left, [], '', '#')\n        this.transverse(this.right, [], '', '#')\n        this.setLocation ()\n      },\n      transverse: function (Input, Output, label, path) {\n        Input.forEach(input => {\n          var abs = input.path && input.path.substr(0, 1) === '/'\n\n          var newLabel = input.label || input.name || (abs ? input.path.substr(1) : input.path)\n          if ((newLabel || input.icon) && (input.path || '').indexOf(':') === -1 && !input.redirect) {\n            Output.push({})\n            var i = Output.length - 1\n\n            Output[i].icon = input.icon\n            Output[i].label = newLabel\n            newLabel = (label ? `${label} / ` : '') + newLabel\n\n            var newPath = abs ? `#${input.path}` : `${path || ''}/${input.path}`\n            if (input.children) {\n              Output[i].children = []\n              this.transverse(input.children, Output[i].children, newLabel, newPath)\n            } else {\n              Output[i].href = input.href || newPath\n              this.$data.links[input.href || newPath] = newLabel\n            }\n          }\n        })\n      },\n      getRight: function () {\n        var R = []\n        this.right.forEach(r => {\n          R.push(r)\n        })\n        R.reverse()\n        return R\n      },\n      getItem: function (item) {\n        return Object.assign({\n          scale: this.barScale,\n          bgColor: this.bgColor,\n          fontColor: this.fontColor,\n          hoverColor: this.hoverColor,\n          activeColor: this.activeColor,\n          path: this.$data.Path\n        }, item, {\n          path: this.$data.Path\n        })\n      }\n    }\n  }\n</script>\n\n<template>\n  <div class=\"tree_nav_bar\">\n    <ul :style=\"'background-color:'+bgColor\">\n      <item\n        v-if=\"tree.length > 1\"\n        v-bind=\"getItem({})\"\n        icon=\"bars\"\n        :label=\"showPath ? path : ''\"\n        :href=\"open\"\n        style=\"float:left\"\n      ></item>\n      <item\n        v-for=\"item in left\"\n        v-bind=\"getItem(item)\"\n        style=\"float:left\"\n        :position=\"-1\"\n      />\n      <item\n        v-for=\"item in getRight()\"\n        v-bind=\"getItem(item)\"\n        style=\"float:right\"\n        :position=\"1\"\n      />\n    </ul>\n    <vue-over-body\n      :open=\"sideBar\"\n      :dialog-style=\"{'position': 'absolute'}\"\n      before=\"tree_nav_before\"\n      after=\"tree_nav_after\"\n    >\n      <div :style=\"{\n        'min-width': '300px',\n        'height': '100%',\n        'background-color': bgColor,\n        'overflow-y': 'auto'\n      }\">\n        <ul style=\"box-shadow:none;\">\n          <item\n            v-for=\"item in tree\"\n            v-bind=\"getItem(item)\"\n          />\n        </ul>\n        <div style=\"height:20px\"></div>\n      </div>\n    </vue-over-body>\n  </div>\n</template>\n\n<style>\n  .tree_nav_bar {\n    margin-bottom:20px;\n  }\n\n  .tree_nav_bar ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\n  }\n\n  .tree_nav_before {\n    height: 100%;\n    top: 0;\n    left: -300px;\n  }\n\n  .tree_nav_after {\n    left: 0;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}